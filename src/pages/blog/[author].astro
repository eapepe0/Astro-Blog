---
import type { GetStaticPaths } from "astro";
import { siteConfig } from 'src/config/site-config';
import { Image } from 'astro:assets';
import TypedBlogPost from '@components/TypedBlogPost.astro';
import Layout from '@layouts/Layout.astro';
import { getCollection } from "astro:content";



export const getStaticPaths = (async() => {
    // obtengo los autores y los posteos
    const [autores , posteos] = await Promise.all([
        getCollection('author'),
        getCollection('blog'),
    ])

     // autores.map = Para cada autor, se genera una ruta.
    return autores.map((autor) => ({
        // en params defino el parametro para generar la ruta = /author/john-doe
        params: { author: autor.id },
        // en props defino los datos que se pasaran a la pagina
        props: {
            // Filtra los posteos que pertenecen al autor actual usando su id
            blogPosts: posteos.filter((post) => post.data.author.id === autor.id),
            // Incluye los datos del autor (como su nombre y biografía)
            author : autor.data,
        }
    }));
}) satisfies GetStaticPaths;



// En las páginas generadas, Astro.props contendrá los datos específicos para la ruta.
const { blogPosts, author } = Astro.props;


 // const blogPosts = [
 // { data: { title: 'Post 1', author: { id: 'john-doe' } } },
  // { data: { title: 'Post 3', author: { id: 'john-doe' } } }
 // ];
 // const author = { name: 'John Doe', bio: 'Writer and blogger' };
---

<Layout>
  <section class="bg-gray-900">
    <div class="container px-6 py-10 mx-auto">
      <h1 class="text-3xl font-semibold capitalize lg:text-4xl text-white">
        {siteConfig.title}
      </h1>

      <div class="text-md text-gray-400 mb-0 flex flex-row mt-2">
        <Image
          class="rounded-full"
          src={author.avatar}
          alt={author.name}
          width={50}
          height={50}
        />

        <div class="flex flex-col ml-5">
          <a>{author.name}</a>
          <span>Listado de todos mis posts</span>
          
        </div>
        
      </div>

      <div class="grid grid-cols-1 gap-8 mt-8 md:mt-16 md:grid-cols-2">
        {blogPosts.map((post) => <TypedBlogPost post={post} />)}
      </div>
    </div>
  </section>
</Layout>

<style is:global>
  a {
    @apply text-blue-500 hover:underline;
  }
</style>